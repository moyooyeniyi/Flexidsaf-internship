//SCOPE

Scope:
Global Scope:

const name = "Tola"

function callName(){

console.log(name)

}
console.log(name)
callName()


Local Scope:

function callName(){
const name = "Tobi"
console.log(name)
}

//LET, CONST
let name = "Moyo"
const newName = "MoyoBaby"

//ARROW FUNCTIONS

Traditional Arrow Functions

function to arrow function
example

function (a, b){
return a + b
}

//Arrow function
(a, b) => a + b

function bob(a){
return a + 100
}

const bob = (a) => a + 100

// .map() accepts a callback and applies that function to each of the elementof an array, then return a new array

const numbers = [1, 2, 3, 4, 5]

const squares = numbers.map(square)
const cubes = numbers.map(cube)


console.log(cubes)

function square(element){
  return Math.pow(element, 2)
}

function cube(element){
  return Math.pow(element, 3)
}


// .filter() = creaes a new array by filtering out elements
//Example 1


let numbers = [1, 2, 3, 4, 5, 6, 7]
let evenNums = numbers.filter(isEven)
let oddNums = numbers.filter(isOdd)


console.log(evenNums)
console.log(oddNums)
function isEven(element){
  return element % 2 === 0
}

function isOdd(element){
  return element % 2 !== 0
}

//Example 2
const ages = [16, 17, 18, 18, 19, 20, 60]
const adults = ages.filter(isAdult)
const child = ages.filter(isChild)

console.log(adults)
console.log(child)

function isAdult(element){
  return element >= 18
}

function isChild(element){
  return element < 18
}

//Example 3
const words = ["apple", "orange", "banana", "kiwi", "pomegranate", "coconut"]
const wordLength = words.filter(getShortWords)
console.log(wordLength)

function getShortWords(element){
  return element.length <= 6
}

// for each() = method used to iterate over the elements of an array and apply a specified function (callback) to each element

//array.forEach(callback)

let numbers = [1, 2, 3, 4, 5]


numbers.forEach(tripple)
numbers.forEach(display)

function double(element, index, array){
  array[index] = element * 2
}

function tripple(element, index, array){
  array[index] = element * 3
}

function display(element){
  console.log(element)
}
